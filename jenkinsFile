def COLOR_MAP = [
    SUCCESS: 'good',
    UNSTABLE: 'warning',
    FAILURE: 'danger',
    ABORTED: 'danger',
    NOT_BUILT: 'warning'
]
pipeline{
    agent any
    environment{
        NETLIFY_SITE_ID = 'cdde1470-b15d-48c9-b055-a5e6d2a4d965'
        NETLIFY_AUTH_TOKEN = credentials('netlify-token')
    }
    stages{
        stage("build"){
            agent {docker {
                
                 image 'node:18-alpine'
                 reuseNode true

             }}
            steps{
                    sh ''' 
                        ls -la
                        node --version
                        npm --version
                        npm ci
                        npm run build
                        ls -la

                     '''
                 }


        }
        stage ("checking if scm sechdule is working"){
            agent any 
            steps{
                    sh ''' 
                        echo "Checking if SCM schedule is working"
                        git status
                        git log -1
                     '''
                 }

        }
        stage("deploy"){
            agent {docker {
                
                 image 'node:18-alpine'
                 reuseNode true

             }}
            steps{
                    sh ''' 
                            npm install netlify-cli -g
                            netlify --version
                            echo "Deploying to production. Site ID: ${NETLIFY_SITE_ID}"
                            netlify status
                            netlify deploy --prod --dir=build --no-build
                            echo "Deployment complete."


                      '''
                 }

        }
        stage("test"){
                agent {docker {
                
                 image 'node:18-alpine'
                 reuseNode true}}
            steps{
                    sh ''' 
                        test -f build/index.html
                        npm test
                     '''
                 }

        }




}

post {
    always {
        echo "slack notifications"
        slackSend channel: '#build-notifications', 
                   color: "danger", 
                   message: "*${currentBuild.currentResult}:* - Job: `${env.JOB_NAME}` - Build: `${env.BUILD_NUMBER}`"
    }
}}
